{% if gateway_class_name == "kgateway" %}
---
apiVersion: gateway.kgateway.dev/v1alpha1
kind: GatewayParameters
metadata:
  name: {{ name }}-gw-params
  namespace: {{ namespace }}
spec:
  kube: 
    envoyContainer:
      bootstrap:
        logLevel: debug
    service:
      type: LoadBalancer
    deployment:
      replicas: {{ size }}
{% endif %}
{% if gateway_class_name == "gloo-gateway-v2" %}
---
apiVersion: gloo.solo.io/v1alpha1
kind: GlooGatewayParameters
metadata:
  name: {{ name }}-ggw-params
  namespace: {{ namespace }}
spec:
  kube: 
    envoyContainer:
      bootstrap:
        logLevel: debug
    service:
      type: LoadBalancer
    deployment:
      replicas: {{ size }}
{%   if extauth_enabled or ratelimiter_enabled %}
  sharedExtensions:
{%     if extauth_enabled %}
    extauth:
      enabled: true
{%     endif %}
{%     if ratelimiter_enabled %}
    ratelimiter:
      enabled: true
{%     endif %}
{%   endif %}
{% endif %}
{% if gateway_class_name == "kgateway" or gateway_class_name == "gloo-gateway-v2" %}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ name }}
  namespace: {{ namespace }}
spec:
  maxReplicas: {{ size }}
  minReplicas: {{ size }}
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ name }}
{% endif %}
{% if gateway_class_name == "istio" %}
{% if istio_126 %}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{name }}-options
  namespace: {{ namespace }}
data:
  horizontalPodAutoscaler: |
    spec:
      minReplicas: {{ size }}
      maxReplicas: {{ size }}

  deployment: |
    spec:
      replicas: {{ size }}
      template:
        spec:
          containers:
          - name: istio-proxy
            resources:
              limits:
                cpu: 50m
                memory: 256Mi
              requests:
                cpu: 2m
                memory: 64m

##    metadata:
##      annotations:
##        additional-annotation: some-value

##  service: |
##    spec:
##      ports:
##      - "\$patch": delete
##        port: 15021
{% else %}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ name }}
  namespace: {{ namespace }}
spec:
  maxReplicas: {{ size }}
  minReplicas: {{ size }}
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ name }}-{{ gateway_class_name }}
{% endif %}
{% endif %}
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
{% if cert_manager_enabled %}
  annotations:
###    cert-manager.io/issuer: {{ name }}-ca-issuer
    cert-manager.io/issuer: ingress-gateway-ca-issuer
{% endif %}
  name: {{ name }}
  namespace: {{ namespace }}
  labels:
    app: {{ name }}
{% if gateway_class_name == "istio" %}
{% if revision %}
    istio.io/rev: {{ revision }}
{% endif %}
{% endif %}
spec:
  gatewayClassName: {{ gateway_class_name }}
  listeners:
  - name: http
    hostname: "*.{{ tldn }}"
    port: {{ port }}
    protocol: HTTP
    allowedRoutes:
      namespaces:
        from: Same # All
{% if cert_manager_enabled %}
  - name: https
    hostname: "*.{{ tldn }}"
    port: {{ ssl_port }}
    protocol: HTTPS
    allowedRoutes:
      namespaces:
        from: Same # All
    tls:
      mode: Terminate
      certificateRefs:
        - name: {{ secret_name }}
          kind: Secret
###      options:
{% endif %}
{% if gateway_class_name == "kgateway" %}
  infrastructure:
    parametersRef:
      name: {{ name }}-gw-params
      group: gateway.kgateway.dev
      kind: GatewayParameters  
{% endif %}
{% if gateway_class_name == "gloo-gateway-v2" %}
###  infrastructure:
###    parametersRef:
###      name: {{ name }}-ggw-params
###      group: gloo.solo.io
###      kind: GlooGatewayParameters  
{% endif %}
{% if gateway_class_name == "istio" %}
  infrastructure:
    parametersRef:
      group: ""
      kind: ConfigMap
      name: {{ name }}-options
##    annotations:
##      some-key: some-value
##    labels:
##      key: value
{% endif %}
{% if gateway_class_name == "kgateway" or gateway_class_name == "gloo-gateway-v2" %}
---
apiVersion: gateway.kgateway.dev/v1alpha1
kind: HTTPListenerPolicy
metadata:
  name: access-logs
  namespace: {{ namespace }}
spec:
  targetRefs:
  - group: gateway.networking.k8s.io
    kind: Gateway
    name: {{ name }}
  accessLog:
  - fileSink:
      path: /dev/stdout
      jsonFormat:
          start_time: "%START_TIME%"
          method: "%REQ(X-ENVOY-ORIGINAL-METHOD?:METHOD)%"
          path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
          protocol: "%PROTOCOL%"
          response_code: "%RESPONSE_CODE%"
          response_flags: "%RESPONSE_FLAGS%"
          bytes_received: "%BYTES_RECEIVED%"
          bytes_sent: "%BYTES_SENT%"
          total_duration: "%DURATION%"
          resp_backend_service_time: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"
          req_x_forwarded_for: "%REQ(X-FORWARDED-FOR)%"
          user_agent: "%REQ(USER-AGENT)%"
          request_id: "%REQ(X-REQUEST-ID)%"
          authority: "%REQ(:AUTHORITY)%"
          backendHost: "%UPSTREAM_HOST%"
          backendCluster: "%UPSTREAM_CLUSTER%"
{% endif %}
...
