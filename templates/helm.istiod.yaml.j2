---
{%- if istio_revision %}
revision: {{ istio_revision }}
{%- endif %}
{%- if ambient_enabled %}
profile: ambient
{%-   if multicluster_enabled %}
platforms:
  peering:
    enabled: true
{%-   endif %}
license:
  value: {{ gloo_mesh_license_key }}
{%- endif %}
global:
  hub: {{ istio_repo }}
  tag: {{ istio_ver }}{{ istio_flavor }}
  variant: {{ istio_variant }}
{%- if multicluster_enabled %}
  meshID: {{ mesh_id }}
  multiCluster:
    clusterName: {{ cluster }}
    enabled: true
  network: {{ network }}
{%- endif %}
{%- if spire_enabled %}
gateways:
  spire:
    workloads: true
{%- endif %}
env:
  AUTO_RELOAD_PLUGIN_CERTS: true
  PILOT_ENABLE_K8S_SELECT_WORKLOAD_ENTRIES: false ## ???
  PILOT_SKIP_VALIDATE_TRUST_DOMAIN: true
######  VERIFY_CERTIFICATE_AT_CLIENT: false
{%- if ambient_enabled %}
{%-   if not istio_127_enabled %}
  PILOT_ENABLE_ALPHA_GATEWAY_API: true # Don't know what this does # For EW Gateway TLS # Broken in 1.27.2
{%-   endif %}
  PILOT_ENABLE_IP_AUTOALLOCATE: true
  PILOT_ENABLE_WORKLOAD_ENTRY_AUTOREGISTRATION: true
  PILOT_ENABLE_WORKLOAD_ENTRY_HEALTHCHECKS: true
  PEERING_DISCOVERY_SUFFIX: "mesh.internal"
{%- endif %}
meshConfig:
  defaultConfig:
    holdApplicationUntilProxyStarts: true
    proxyMetadata:
      ISTIO_META_DNS_CAPTURE: "true"
  defaultHttpRetryPolicy:
    attempts: 3
    retryOn: connect-failure,refused-stream,unavailable,cancelled,reset,503
  trustDomain: {{ trust_domain }}
{%- if multicluster_enabled %}
{%-   if trust_domain != remote_trust_domain %}
###  trustDomainAliases:
###  - "{{ remote_trust_domain }}"
{%-   endif %}
{%- endif %}
{%- if docker_desktop_enabled %}
resources:
  limits:
    cpu: 20m
    memory: 256Mi
  requests:
    cpu: 2m
    memory: 64Mi
autoscaleMin: 1
autoscaleMax: 1
{%- endif %}
{%- if sidecar_injector_webhooks_enabled %}
sidecarInjectorWebhook:
  templates:
    custom_ingress: |
      spec:
        containers:
        - name: istio-proxy
          ports:
          - containerPort: 8080
            hostPort: 80
          - containerPort: 8443
            hostPort: 443
          - containerPort: 15021
            hostPort: 15021

    custom-router-gateway: |
      spec:
        containers:
        - name: istio-proxy
          args:
          - proxy
          - router
          - '--domain'
          - $(POD_NAMESPACE).svc.cluster.local
          - '--proxyLogLevel=debug'
          - '--proxyComponentLogLevel=misc:error'
          - '--log_output_level=default:info'
{%- endif %}
...
