{%- if gateway_class_name == "kgateway" %}
---
apiVersion: gateway.kgateway.dev/v1alpha1
kind: GatewayParameters
metadata:
  name: {{ name }}-gw-params
  namespace: {{ namespace }}
spec:
  kube: 
    envoyContainer:
      bootstrap:
        logLevel: debug
    service:
      type: LoadBalancer
{%-   if aws_enabled %}
    annotations:
      external-dns.alpha.kubernetes.io/hostname: "gateway.{{ network }}.soloio.vincentjorgensen.com"
      service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
      service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/healthz/ready"
      service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: "15021"
      service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: http
      service.beta.kubernetes.io/aws-load-balancer-name: "gateway-{{ network }}"
      service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
      service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    labels:
      target-workload: gateway
{%-   endif %}
    deployment:
      replicas: {{ size }}
{%- endif %}
{%- if gateway_class_name == "gloo-gateway-v2" %}
---
apiVersion: gloo.solo.io/v1alpha1
kind: GlooGatewayParameters
metadata:
  name: {{ name }}-ggw-params
  namespace: {{ namespace }}
spec:
  kube: 
    envoyContainer:
      bootstrap:
        logLevel: debug
    service:
      type: LoadBalancer
    deployment:
      replicas: {{ size }}
  sharedExtensions:
    extauth:
{%   if extauth_enabled %}
      enabled: true
{%   else %}
      enabled: false
{%   endif %}
    ratelimiter:
{%   if ratelimiter_enabled %}
      enabled: true
{%   else %}
      enabled: false
{%-   endif %}
{% endif %}
{%- if gateway_class_name == "kgateway" or gateway_class_name == "gloo-gateway-v2" or  gateway_class_name == "gloo-gateway" %}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ name }}
  namespace: {{ namespace }}
spec:
  maxReplicas: {{ size }}
  minReplicas: {{ size }}
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
{%-   if gateway_class_name == "gloo-gateway" %}
    name: gloo-proxy-{{ name }}
{%-   else %}
    name: {{ name }}
{%-   endif %}
{%- endif %}
{%- if gateway_class_name == "istio" %}
{%-   if istio_126 %}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{name }}-options
  namespace: {{ namespace }}
data:
  horizontalPodAutoscaler: |
    spec:
      minReplicas: {{ size }}
      maxReplicas: {{ size }}

  deployment: |
    spec:
      replicas: {{ size }}
      template:
        spec:
          containers:
          - name: istio-proxy
            resources:
              limits:
                cpu: 50m
                memory: 256Mi
              requests:
                cpu: 2m
                memory: 64m

##    metadata:
##      annotations:
##        additional-annotation: some-value

##  service: |
##    spec:
##      ports:
##      - "\$patch": delete
##        port: 15021
{%   else %}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ name }}
  namespace: {{ namespace }}
spec:
  maxReplicas: {{ size }}
  minReplicas: {{ size }}
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ name }}-{{ gateway_class_name }}
{%-   endif %}
{%- endif %}
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
{%- if gateway_class_name == "gloo-gateway" %}
  annotations:
    gateway.gloo.solo.io/gateway-parameters-name: "{{ name }}-gw-params"
{%- endif %}
{%- if cert_manager_enabled %}
  annotations:
###    cert-manager.io/issuer: {{ name }}-ca-issuer
    cert-manager.io/issuer: ingress-gateway-ca-issuer
{%- endif %}
  name: {{ name }}
  namespace: {{ namespace }}
  labels:
    app: {{ name }}
{%- if gateway_class_name == "istio" %}
{%   if revision %}
    istio.io/rev: {{ revision }}
{%   endif %}
{% endif %}
spec:
  gatewayClassName: {{ gateway_class_name }}
  listeners:
  - name: http
    hostname: "*.{{ tldn }}"
    port: {{ port }}
    protocol: HTTP
    allowedRoutes:
      namespaces:
        from: All # Same
{%- if https_enabled %}
  - name: https
    hostname: "*.{{ tldn }}"
    port: {{ ssl_port }}
    protocol: HTTPS
    allowedRoutes:
      namespaces:
        from: Same # All
{%-   if cert_manager_enabled %}
    tls:
      mode: Terminate
      certificateRefs:
        - name: {{ secret_name }}
          kind: Secret
###      options:
{%-   endif %}
{%- endif %}
{%- if gateway_class_name == "gloo-gateway" %}
  - name: readiness
    port: 9091
    protocol: HTTP
    allowedRoutes:
      namespaces:
        from: All # Same
{%- endif %}
{%- if gateway_class_name == "kgateway" %}
  infrastructure:
    parametersRef:
      name: {{ name }}-gw-params
      group: gateway.kgateway.dev
      kind: GatewayParameters  
{%- endif %}
{%- if gateway_class_name == "gloo-gateway-v2" %} # Moved to Patch
###  infrastructure:
###    parametersRef:
###      name: {{ name }}-ggw-params
###      group: gloo.solo.io
###      kind: GlooGatewayParameters  
{%- endif %}
{%- if gateway_class_name == "istio" %}
  infrastructure:
    parametersRef:
      group: ""
      kind: ConfigMap
      name: {{ name }}-options
##    annotations:
##      some-key: some-value
##    labels:
##      key: value
{% endif %}
{%- if gateway_class_name == "kgateway" or gateway_class_name == "gloo-gateway-v2" %}
---
apiVersion: gateway.kgateway.dev/v1alpha1
kind: HTTPListenerPolicy
metadata:
  name: access-logs
  namespace: {{ namespace }}
spec:
  targetRefs:
  - group: gateway.networking.k8s.io
    kind: Gateway
    name: {{ name }}
  accessLog:
  - fileSink:
      path: /dev/stdout
      jsonFormat:
          start_time: "%START_TIME%"
          method: "%REQ(X-ENVOY-ORIGINAL-METHOD?:METHOD)%"
          path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
          protocol: "%PROTOCOL%"
          response_code: "%RESPONSE_CODE%"
          response_flags: "%RESPONSE_FLAGS%"
          bytes_received: "%BYTES_RECEIVED%"
          bytes_sent: "%BYTES_SENT%"
          total_duration: "%DURATION%"
          resp_backend_service_time: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"
          req_x_forwarded_for: "%REQ(X-FORWARDED-FOR)%"
          user_agent: "%REQ(USER-AGENT)%"
          request_id: "%REQ(X-REQUEST-ID)%"
          authority: "%REQ(:AUTHORITY)%"
          backendHost: "%UPSTREAM_HOST%"
          backendCluster: "%UPSTREAM_CLUSTER%"
{%- endif %}
{%- if gateway_class_name == "gloo-gateway" %}
---
apiVersion: gateway.gloo.solo.io/v1alpha1
kind: GatewayParameters
metadata:
  name: {{name }}-gw-params
  namespace: {{ namespace }}
spec:
  kube:
    deployment:
      replicas: {{ size }}
{%-   if aws_enabled %}
    service:
      extraAnnotations:
        external-dns.alpha.kubernetes.io/hostname: "gateway.{{ network }}.soloio.vincentjorgensen.com"
        service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
#        service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/ready"
#        service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: "9091"
#        service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: http
        service.beta.kubernetes.io/aws-load-balancer-name: "gateway-{{ network }}"
        service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance
        service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
        service.beta.kubernetes.io/aws-load-balancer-type: "external"
        service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-west-2:103739863673:certificate/64893fb2-f334-4c85-8f05-c0c42a637e19
##        service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "{{ https_port }}"
##        service.beta.kubernetes.io/aws-load-balancer-ssl-negotiation-policy: "ELBSecurityPolicy-TLS13-1-2-2021-06"
        service.beta.kubernetes.io/aws-load-balancer-ssl-negotiation-policy: "ELBSecurityPolicy-TLS-1-2-2017-01"
##      extraLabels:
##        target-workload: private-gateway
{%-   endif %}
{%- endif %}
...
